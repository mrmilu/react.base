name: Deploy using Ansible
on:
  push:
    branches:
      - develop
      - master
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  DOCKERFILE: Dockerfile

jobs:
  build:
    environment: ${{ github.ref_name == 'master' && 'production' || 'staging'}}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Metadata Extraction for Main Image
        id: meta_main
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ github.ref_name }}

      - name: Build and Push Main Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          file: ${{ env.DOCKERFILE }}
          tags: ${{ steps.meta_main.outputs.tags }}
          labels: ${{ steps.meta_main.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    environment: ${{ github.ref_name == 'master' && 'production' || 'staging'}}
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Deploy to ${{ github.ref_name == 'master' && 'production' || 'staging'}}
      uses: appleboy/ssh-action@v1.0.0
      env:
        PROJECT_PATH: ${{ vars.PROJECT_PATH }}
      with:
        host: ${{ vars.REMOTE_HOST }}
        username: ${{ vars.REMOTE_USER}}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        script_stop: true
        envs: PROJECT_PATH
        script: |
          export COMPOSE_INTERACTIVE_NO_CLI=1
          cd $PROJECT_PATH
          set -euxo pipefail
          git pull
          ansible-playbook -i inventory/${{ github.ref_name == 'master' && 'production' || 'staging'}} site.yml --tags deploy --extra-vars "services_to_start=['front'] docker_compose_project_github_token=${{ secrets.GITHUB_TOKEN }} docker_compose_project_github_actor=${{ github.actor }}"